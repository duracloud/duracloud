<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-4.0.xsd">

  <!--
    A lot of Spring conventions here.
    This element wires together the
      authentication-manager,
      access-decision-manager,
      various servlet filters (including basic-auth, anonymous, and exception-translation)
   -->
  <http access-decision-manager-ref="duraAccessDecisionManager"
        realm="DuraCloud:DuraStore" use-expressions="false">
    <csrf disabled="true"/>

    <intercept-url pattern="/aux/cookies" access="ROLE_ANONYMOUS"/>

    <!-- no one should be adding the 'acl' space, not even ROOT -->
    <intercept-url pattern="/acl" method="PUT" access="ROLE_ROOT"/>
    <intercept-url pattern="/acl/" method="PUT" access="ROLE_ROOT"/>
    <intercept-url pattern="/acl" method="POST" access="ROLE_ADMIN"/>

    <!-- limit snapshot restorals to root users (durachron-94) -->
    <intercept-url pattern="/task/restore-snapshot" method="POST" access="ROLE_ROOT"/>
    <!-- limit access to the Glacier content restore capability -->
    <intercept-url pattern="/task/restore-content" method="POST" access="ROLE_ROOT"/>
    <!-- limit access to set S3 bucket lifecycle policies -->
    <intercept-url pattern="/task/set-storage-policy" method="POST" access="ROLE_ROOT"/>
    <intercept-url pattern="/task/get-snapshot" access="ROLE_USER"/>
    <intercept-url pattern="/task/get-snapshots" access="ROLE_USER"/>
    <intercept-url pattern="/task/get-snapshot-history" access="ROLE_USER"/>
    <intercept-url pattern="/task/get-snapshot-contents" access="ROLE_USER"/>
    <intercept-url pattern="/task/get-restore" access="ROLE_USER"/>
    <intercept-url pattern="/task/get-url" access="ROLE_USER"/>
    <intercept-url pattern="/task/get-signed-url" access="ROLE_USER"/>
    <intercept-url pattern="/task" access="ROLE_USER"/>
    <intercept-url pattern="/task/*" access="ROLE_ADMIN"/>
    <intercept-url pattern="/stores" method="GET" access="ROLE_USER"/>
    <intercept-url pattern="/stores" method="POST" access="ROLE_ROOT"/>
    <intercept-url pattern="/report/store" method="GET" access="ROLE_USER"/>
    <intercept-url pattern="/report/store/*" method="GET" access="ROLE_USER"/>
    <intercept-url pattern="/report/space/*" method="GET" access="ROLE_USER"/>
    <intercept-url pattern="/manifest/*" method="GET" access="ROLE_USER"/>
    <intercept-url pattern="/bit-integrity/*" method="GET" access="ROLE_USER"/>
    <intercept-url pattern="/audit/*" method="GET" access="ROLE_ADMIN"/>

    <!--
      Set initial access as if all spaces are 'open'.
      'closed' spaces will be handled by the spaceAccessVoter.
     -->
    <intercept-url pattern="/**" method="HEAD" access="ROLE_USER, ROLE_ANONYMOUS"/>
    <intercept-url pattern="/**" method="GET" access="ROLE_USER, ROLE_ANONYMOUS"/>

    <intercept-url pattern="/**" method="PUT" access="ROLE_USER"/>
    <intercept-url pattern="/**" method="POST" access="ROLE_USER"/>
    <intercept-url pattern="/**" method="DELETE" access="ROLE_USER"/>

    <anonymous/>
    <http-basic/>
    <logout logout-url="/logout"/>
  </http>

  <!-- The decision-voters here contribute to the AuthZ decision -->
  <beans:bean id="spaceReadAccessVoter" class="org.duracloud.security.vote.SpaceReadAccessVoter">
    <beans:constructor-arg ref="storageProviderFactory"/>
    <beans:constructor-arg ref="userDetailsSvc"/>
    <beans:constructor-arg>
      <beans:list>
        <beans:value>/x-service-out/bit-integrity/.*</beans:value>
        <beans:value>/x-duracloud-admin/bit-integrity-results.json</beans:value>
      </beans:list>
    </beans:constructor-arg>
  </beans:bean>
  <beans:bean id="spaceWriteAccessVoter" class="org.duracloud.security.vote.SpaceWriteAccessVoter">
    <beans:constructor-arg ref="storageProviderFactory"/>
    <beans:constructor-arg ref="userDetailsSvc"/>
  </beans:bean>

  <beans:bean id="duraAccessDecisionManager" class="org.duracloud.security.vote.AccessDecisionManagerImpl">
    <beans:property name="allowIfAllAbstainDecisions" value="false"/>
    <beans:constructor-arg name="decisionVoters">
      <beans:list>
        <beans:ref bean="spaceReadAccessVoter"/>
        <beans:ref bean="spaceWriteAccessVoter"/>
        <beans:bean class="org.duracloud.security.vote.RoleVoterImpl"/>
        <beans:bean class="org.duracloud.security.vote.UserIpLimitsAccessVoter"/>
      </beans:list>
    </beans:constructor-arg>
  </beans:bean>

  <!-- AuthN Manager -->
  <authentication-manager alias="authenticationManager" erase-credentials="false">
    <authentication-provider user-service-ref="userDetailsSvc">
      <password-encoder ref="passwordEncoder"/>
    </authentication-provider>
    <authentication-provider user-service-ref="userDetailsSvc"/>
  </authentication-manager>

  <beans:bean id="userDetailsServiceCache" class="org.duracloud.security.impl.UserDetailsServiceCache">
    <beans:constructor-arg ref="accountRepo"/>
    <beans:constructor-arg ref="userFinderUtil"/>
  </beans:bean>

  <beans:bean id="userDetailsSvc" class="org.duracloud.security.impl.UserDetailsServiceFactoryBean" lazy-init="true"
              scope="request">
    <beans:property name="userDetailsServiceCache" ref="userDetailsServiceCache"/>
    <aop:scoped-proxy/>
  </beans:bean>


  <beans:bean id="passwordEncoder"
              class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
    <beans:constructor-arg value="256"/>
  </beans:bean>

</beans:beans>
